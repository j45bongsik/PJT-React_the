@charset 'utf-8';


/* reset */
html, body, div, span, object,h1, h2, h3, h4, h5, h6, p, blockquote, a, button, abbr, address, img, q,dl, dt, dd, ol, ul, li,fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td,article, aside, footer, header, section, summary{margin:0;padding:0;border:0;font:inherit;}
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section{display: block;}/* HTML5 display-role reset for older browsers */
body,html,#root,.App{width: 100%;height: 100%; margin: 0; padding: 0; font-family:'Noto Sans DemLight', "맑은 고딕", "Malgun Gothic", Dotum, sans-serif;font-size:13px;color: #333;letter-spacing:-0.045em !important;}

ol, ul{list-style: none;}
table{border-collapse: collapse;border-spacing: 0;}
img{border: none;}
a[href^="tel"] {color: inherit; text-decoration: none;}
a{text-decoration: none;color: inherit;}
address{font-style: normal;}
button{display: inline-block; border: none;background-color: transparent;cursor: pointer;}
select{appearance: none;
  &::-ms-expand {display:none;}
}
input,button,a,select,option{font-family:inherit;font-size:inherit;}
input[type="checkbox"], input[type="radio"]{-webkit-appearance: none;position:absolute;vertical-align:middle;
  &::-ms-check{border:solid 1px #fff;}
}
input[type="text"]::-ms-clear {display:none;}
caption,hr{overflow: hidden;position: relative;left: 0;top: 0;width: 1px;height: 1px;background: 0 0;font-size: 0;color: transparent;line-height: 0;text-indent: 100%; margin: -1px;}
pre{word-break:break-all;white-space:pre-line;}
li{list-style: none;}

/* common */
*{-webkit-box-sizing: border-box; -moz-box-sizing: border-box; box-sizing: border-box;}
.clearFix:after{content: "";display: block;clear: both;}
.hidden{display:block;margin: 0;padding: 0;width: 0;height: 0;overflow: hidden;font-size: 0;line-height: 0;}

/* Accessibility Navigation */
#accNav {position:absolute; top:0; left:0; z-index:999999999; width:100%; height:0;}
#accNav a {display:block; position:absolute; left:0; top:0; overflow:hidden; width:1px; height:1px; margin-left:-1px; margin-bottom:-1px; text-align:center; color:#fff; white-space:nowrap;}
#accNav a:focus,
#accNav a:hover,l
#accNav a:active {z-index:1000; width:100%; height:auto; padding:5px 0; background:#444; color:#fff; font-weight:700;}


.cScrollY {
  overflow-x: hidden;
  overflow-y: auto;
  &::-webkit-scrollbar {
    width: 5px;
  }
  &::-webkit-scrollbar-thumb {
    background: #217af4;
    border-radius: 10px;
    transition: 0.3s;
  }
  &::-webkit-scrollbar-track {
    background: rgba(33, 122, 244, .1);
    border-radius: 10px;
  }
}

// 노치대응
// 테스트용 safe area 변수 (값이 0일때는 0% 또는 0px 사용)
// $safeAreaMap: ("top": 44px, "right": 0%, "bottom": 34px, "left": 0%);
$safeAreaMap: (
    "top": env(safe-area-inset-top), 
    "right": env(safe-area-inset-right),
    "bottom": env(safe-area-inset-bottom), 
    "left": env(safe-area-inset-left)
);

$safe-top: map-get($safeAreaMap,"top");
$safe-right: map-get($safeAreaMap,"right");
$safe-bottom: map-get($safeAreaMap,"bottom");
$safe-left: map-get($safeAreaMap,"left");

/**
 * safe-area-inset 처리
 * $dir - 방향(all, top, right, bottom, left, 생략가능)
 * $value - 더해질 값(생략가능)
 */
@function safe($dir: all, $value: 0) {
	@if ($dir == all) {
		@if ($value > 0) {
			@return calc(#{$value} + #{map-get($safeAreaMap,"top")}) calc(#{$value} + #{map-get($safeAreaMap,"right")}) calc(#{$value} + #{map-get($safeAreaMap,"bottom")}) calc(#{$value} + #{map-get($safeAreaMap,"left")});
		}
		@else if ($value < 0) {
			@return calc((#{-$value} + #{map-get($safeAreaMap,"top")}) * -1) calc((#{-$value} + #{map-get($safeAreaMap,"right")}) * -1) calc((#{-$value} + #{map-get($safeAreaMap,"bottom")}) * -1) calc((#{-$value} + #{map-get($safeAreaMap,"left")}) * -1);
		}
		@else {
			@return map-get($safeAreaMap,"top") map-get($safeAreaMap,"right") map-get($safeAreaMap,"bottom") map-get($safeAreaMap,"left");
		}
	}
	@else {
		@if ($value > 0) {
			@return calc(#{$value} + #{map-get($safeAreaMap,$dir)});
		}
		@else if ($value< 0) {
			@return calc((#{-$value} + #{map-get($safeAreaMap,$dir)}) * -1);
		}
		@else {
			@return map-get($safeAreaMap,$dir);
		}
	}
}